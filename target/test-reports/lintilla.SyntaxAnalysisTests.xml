<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Bryces-MacBook-Pro-2.local" name="lintilla.SyntaxAnalysisTests" tests="17" errors="0" failures="1" skipped="0" time="0.082" timestamp="2018-10-10T09:08:32">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib"/><property name="java.vm.version" value="25.152-b05"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/bryce/comp332-lintilla"/><property name="java.runtime.version" value="1.8.0_152-ea-b05"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/kw/qkrd17vn1hngpkbktc7dycd80000gn/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/var/folders/kw/qkrd17vn1hngpkbktc7dycd80000gn/T/jna-94020683/jna3073478225824257887.tmp"/><property name="java.library.path" value="/Users/bryce/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.13.4"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="user.home" value="/Users/bryce"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.2.0/libexec/bin/sbt-launch.jar"/><property name="user.name" value="bryce"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.2.0/libexec/bin/sbt-launch.jar"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_152-ea"/><property name="java.ext.dirs" value="/Users/bryce/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an identifier of one letter produces the correct tree" time="0.021">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an identifier as an applied instance produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an identifier containing digits and underscores produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an integer as an identifier gives an error" time="0.003">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (digit)" time="0.001">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (underscore)" time="0.0">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a keyword as an identifier gives an error" time="0.003">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a keyword prefix as an identifier produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an integer of one digit as an integer produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an integer as an integer produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a non-integer as an integer gives an error" time="0.0">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an assign expression produces the correct tree" time="0.019">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a return expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an empty return expression produces the correct tree" time="0.004">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an if expression with empty else produces the correct tree" time="0.01">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing an if expression with else expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="lintilla.SyntaxAnalysisTests" name="parsing a while expression produces the correct tree" time="0.007">
                                                 <failure message="Parse succeeded with &quot;WhileExp(LessExp(IdnExp(IdnUse(n)),IntExp(0)),Block(Vector(PlusExp(IdnExp(IdnUse(n)),IntExp(1)))))&quot; instead of expected &quot;WhileExp(LessExp(IdnExp(IdnUse(n)),IntExp(0)),PlusExp(IdnExp(IdnUse(n)),IntExp(1)))&quot; at end of source (1,22)" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Parse succeeded with &quot;WhileExp(LessExp(IdnExp(IdnUse(n)),IntExp(0)),Block(Vector(PlusExp(IdnExp(IdnUse(n)),IntExp(1)))))&quot; instead of expected &quot;WhileExp(LessExp(IdnExp(IdnUse(n)),IntExp(0)),PlusExp(IdnExp(IdnUse(n)),IntExp(1)))&quot; at end of source (1,22)
	at org.scalatest.MatchersHelper$.indicateFailure(MatchersHelper.scala:346)
	at org.scalatest.Matchers$ShouldMethodHelper$.shouldMatcher(Matchers.scala:6668)
	at org.scalatest.Matchers$AnyShouldWrapper.should(Matchers.scala:6704)
	at lintilla.SyntaxAnalysisTests.$anonfun$new$17(SyntaxAnalysisTests.scala:111)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at lintilla.SyntaxAnalysisTests.withFixture(SyntaxAnalysisTests.scala:27)
	at org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at lintilla.SyntaxAnalysisTests.org$scalatest$BeforeAndAfter$$super$runTest(SyntaxAnalysisTests.scala:27)
	at org.scalatest.BeforeAndAfter.runTest(BeforeAndAfter.scala:203)
	at org.scalatest.BeforeAndAfter.runTest$(BeforeAndAfter.scala:192)
	at lintilla.SyntaxAnalysisTests.org$scalatest$BeforeAndAfterEach$$super$runTest(SyntaxAnalysisTests.scala:27)
	at org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:221)
	at org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:214)
	at lintilla.SyntaxAnalysisTests.runTest(SyntaxAnalysisTests.scala:27)
	at org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at lintilla.SyntaxAnalysisTests.runTests(SyntaxAnalysisTests.scala:27)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at lintilla.SyntaxAnalysisTests.org$scalatest$FunSuiteLike$$super$run(SyntaxAnalysisTests.scala:27)
	at org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at lintilla.SyntaxAnalysisTests.org$scalatest$BeforeAndAfter$$super$run(SyntaxAnalysisTests.scala:27)
	at org.scalatest.BeforeAndAfter.run(BeforeAndAfter.scala:258)
	at org.scalatest.BeforeAndAfter.run$(BeforeAndAfter.scala:256)
	at lintilla.SyntaxAnalysisTests.org$scalatest$BeforeAndAfterAll$$super$run(SyntaxAnalysisTests.scala:27)
	at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)
	at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)
	at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)
	at lintilla.SyntaxAnalysisTests.run(SyntaxAnalysisTests.scala:27)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.processRunnable$1(Tests.scala:347)
	at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>